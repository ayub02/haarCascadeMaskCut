import pickledb
import tkinter as tk
import pandas as pd

def updateDB():
    config = pickledb.load('PycharmProjects/OpenCV/Deployment/config.db', False)

    w = int(width.get())
    w_min = int(min_width.get())
    w_max = int(max_width.get())
    h = int(height.get())
    h_min = int(min_height.get())
    h_max = int(max_height.get())
    x = int(start_x.get())
    y = int(start_y.get())
    yminlim = int(y_min_lim.get())
    ymaxlim = int(y_max_lim.get())
    patternpasstime = int(pattern_pass_time.get())
    cutdelay = int(cut_delay.get())

    config.set('width', w)
    config.set('min_width', w_min)
    config.set('max_width', w_max)
    config.set('height', h)
    config.set('min_height', h_min)
    config.set('max_height', h_max)
    config.set('start_x', x)
    config.set('start_y', y)
    config.set('y_min_lim', yminlim)
    config.set('y_max_lim', ymaxlim)
    config.set('pattern_pass_time', patternpasstime)
    config.set('cut_delay', cutdelay)

    config.dump()

window = tk.Tk()  # Makes main window
window.wm_title("Configuration")

defaults = pickledb.load('PycharmProjects/OpenCV/Deployment/config.db', False)

df_width = tk.StringVar()
df_min_width = tk.StringVar()
df_max_width = tk.StringVar()
df_height = tk.StringVar()
df_min_height = tk.StringVar()
df_max_height = tk.StringVar()
df_start_x = tk.StringVar()
df_start_y = tk.StringVar()
df_y_min_lim = tk.StringVar()
df_y_max_lim = tk.StringVar()
df_pattern_pass_time = tk.StringVar()
df_cut_delay = tk.StringVar()

df_width.set(defaults.get('width'))
df_min_width.set(defaults.get('min_width'))
df_max_width.set(defaults.get('max_width'))
df_height.set(defaults.get('height'))
df_min_height.set(defaults.get('min_height'))
df_max_height.set(defaults.get('max_height'))
df_start_x.set(defaults.get('start_x'))
df_start_y.set(defaults.get('start_y'))
df_y_min_lim.set(defaults.get('y_min_lim'))
df_y_max_lim.set(defaults.get('y_max_lim'))
df_pattern_pass_time.set(defaults.get('pattern_pass_time'))
df_cut_delay.set(defaults.get('cut_delay'))

width = tk.Spinbox(window, from_=1, to=500, textvariable=df_width, width=5, command=updateDB)
min_width = tk.Spinbox(window, from_=1, to=500, textvariable=df_min_width, width=5, command=updateDB)
max_width = tk.Spinbox(window, from_=2, to=500, textvariable=df_max_width, width=5, command=updateDB)
height = tk.Spinbox(window, from_=1, to=500, textvariable=df_height, width=5, command=updateDB)
min_height = tk.Spinbox(window, from_=1, to=500, textvariable=df_min_height, width=5, command=updateDB)
max_height = tk.Spinbox(window, from_=2, to=500, textvariable=df_max_height, width=5, command=updateDB)
start_x = tk.Spinbox(window, from_=0, to=400, textvariable=df_start_x, width=5, command=updateDB)
start_y = tk.Spinbox(window, from_=0, to=400, textvariable=df_start_y, width=5, command=updateDB)
y_min_lim = tk.Spinbox(window, from_=0, to=400, textvariable=df_y_min_lim, width=5, command=updateDB)
y_max_lim = tk.Spinbox(window, from_=0, to=400, textvariable=df_y_max_lim, width=5, command=updateDB)
pattern_pass_time = tk.Spinbox(window, from_=0, to=400, textvariable=df_pattern_pass_time, width=5, command=updateDB)
cut_delay = tk.Spinbox(window, from_=0, to=2000, textvariable=df_cut_delay, width=5, command=updateDB)


label_width = tk.Label(window, text="width")
label_min_width = tk.Label(window, text="min width")
label_max_width = tk.Label(window, text="max width")
label_height = tk.Label(window, text="height")
label_min_height = tk.Label(window, text="min height")
label_max_height = tk.Label(window, text="max height")
label_start_x = tk.Label(window, text="x")
label_start_y = tk.Label(window, text="y")
label_y_min_lim = tk.Label(window, text="y_min_lim")
label_y_max_lim = tk.Label(window, text="y_max_lim")
label_pattern_pass_time = tk.Label(window, text="pattern_pass_time")
label_start_cut_delay = tk.Label(window, text="cut_delay")

width.grid(row=0, column=1)
min_width.grid(row=1, column=1)
max_width.grid(row=2, column=1)
height.grid(row=3, column=1)
min_height.grid(row=4, column=1)
max_height.grid(row=5, column=1)
start_x.grid(row=6, column=1)
start_y.grid(row=7, column=1)
y_min_lim.grid(row=8, column=1)
y_max_lim.grid(row=9, column=1)
pattern_pass_time.grid(row=10, column=1)
cut_delay.grid(row=11, column=1)


label_width.grid(row=0, column=0, stick="w")
label_min_width.grid(row=1, column=0, stick="w")
label_max_width.grid(row=2, column=0, stick="w")
label_height.grid(row=3, column=0, stick="w")
label_min_height.grid(row=4, column=0, stick="w")
label_max_height.grid(row=5, column=0, stick="w")
label_start_x.grid(row=6, column=0, stick="w")
label_start_y.grid(row=7, column=0, stick="w")
label_y_min_lim.grid(row=8, column=0, stick="w")
label_y_max_lim.grid(row=9, column=0, stick="w")
label_pattern_pass_time.grid(row=10, column=0, stick="w")
label_start_cut_delay.grid(row=11, column=0, stick="w")


window.mainloop()           # Starts GUI
